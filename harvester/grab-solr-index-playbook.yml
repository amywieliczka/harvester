---
-   hosts: solr
    gather_facts: True         
    vars:
      dir_code_src: '~/code/'
      dir_solr_data: '/opt/solr/data'
      # replace colons, scp doesn't play well with colons
      datetime: >
        {{ ansible_date_time.date }}-{{ ansible_date_time.time | regex_replace(':','_') }}
      email_to: "{{ lookup('env', 'EMAIL_SYS_ADMINS') }}"
      server_roles:
        - production
        - stage
        - dev
      s3_bucket: solr.ucldc
      s3_root_path: "indexes/{{ server_role }}"
      region: us-west-2
      remote_user: ec2-user
    tasks:
    - fail: msg="Define server_role to one of production, stage or dev"
      when: server_role not in  server_roles
    - name: tar up latest solr index directoy
      sudo: yes
      command: tar --force-local -cvf /home/{{ remote_user }}/solr-index.{{ datetime }}.tar index/
      args:
        chdir: "{{ dir_solr_data }}"
    - name: chown back to {{ remote_user }}
      sudo: yes
      file:
        owner: "{{ remote_user }}"
        path: /home/{{ remote_user }}/solr-index.{{ datetime }}.tar
    - name: bzip index file
      command: bzip2 solr-index.{{ datetime }}.tar
    - name: push index tarball to s3 for server_role
      shell: aws --region={{ region }} s3 cp solr-index.{{ datetime}}.tar.bz2 s3://{{ s3_bucket }}/{{s3_root_path}}/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/solr-index.{{ datetime }}.tar.bz2
    - name: push index tarball to s3 for server_role to the latest bucket
      shell: aws s3 cp --region={{ region }} solr-index.{{ datetime}}.tar.bz2 s3://{{ s3_bucket }}/{{ s3_root_path }}/solr-index.tar.bz2
### NOTE: s3 module not working, gets a connection reset by peer
###      s3:
###        bucket: solr.ucldc
###        mode: put
###        src: solr-index.{{ datetime }}.tar.bz2
###        object: solr-index.{{ datetime }}.tar.bz2
        #metadata: 'Content-Encoding=bzip2'
        #        ###    - name: fetch index tarball
        #                ###fetch: src=solr-index.{{ datetime }}.tar.bz2
        #                        ###     dest=/var/local/solr-indexes/ flat=yes
        #                          
    - name: remove artifacts on remote
      file:
        state: absent
        path: /home/{{ remote_user }}/solr-index.{{ datetime }}.tar.bz2
###    - name: email note of new index (right now only manual index overwrite)-
###      local_action: mail
###                    from="ucldc@example.edu"
###                    to={{ email_to }}
###                    subject="New solr index tarball ready"
###                    body="New solr index ready for download-> /var/local/solr-indexes/solr-index.{{datetime}}.tar.bz2"
